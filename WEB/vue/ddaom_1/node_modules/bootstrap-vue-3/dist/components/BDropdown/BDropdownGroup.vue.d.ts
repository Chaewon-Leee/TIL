import type { ColorVariant } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: false;
    };
    ariaDescribedby: {
        type: StringConstructor;
        required: false;
    };
    header: {
        type: StringConstructor;
        required: false;
    };
    headerClasses: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        required: false;
        default: undefined;
    };
    headerTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    headerVariant: {
        type: null;
        required: false;
        default: undefined;
    };
}, {
    props: {
        id?: string | undefined;
        ariaDescribedby?: string | undefined;
        header?: string | undefined;
        headerClasses: string | Array<unknown> | Record<string, unknown>;
        headerTag: string;
        headerVariant: ColorVariant;
    };
    headerId: import("vue").ComputedRef<string | undefined>;
    headerRole: import("vue").ComputedRef<"heading" | undefined>;
    classes: import("vue").ComputedRef<{
        [x: string]: ColorVariant;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: false;
    };
    ariaDescribedby: {
        type: StringConstructor;
        required: false;
    };
    header: {
        type: StringConstructor;
        required: false;
    };
    headerClasses: {
        type: (StringConstructor | ObjectConstructor | ArrayConstructor)[];
        required: false;
        default: undefined;
    };
    headerTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    headerVariant: {
        type: null;
        required: false;
        default: undefined;
    };
}>>, {
    headerTag: string;
    headerClasses: string | unknown[] | Record<string, any>;
    headerVariant: any;
}>;
export default _sfc_main;
