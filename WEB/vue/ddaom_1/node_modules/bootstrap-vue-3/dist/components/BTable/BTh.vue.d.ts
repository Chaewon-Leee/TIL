declare const _sfc_main: import("vue").DefineComponent<{
    colspan: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    rowspan: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    stackedHeading: {
        type: StringConstructor;
        required: false;
    };
    stickyColumn: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    variant: {
        type: StringConstructor;
        required: false;
    };
}, {
    props: {
        colspan?: string | number | undefined;
        rowspan?: string | number | undefined;
        stackedHeading?: string | undefined;
        stickyColumn: boolean;
        variant?: string | undefined;
    };
    classes: import("vue").ComputedRef<{
        [x: string]: string | boolean | undefined;
        'b-table-sticky-column': boolean;
        'table-b-table-default': boolean;
    }>;
    scope: import("vue").ComputedRef<"colspan" | "rowspan" | "col">;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    colspan: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    rowspan: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    stackedHeading: {
        type: StringConstructor;
        required: false;
    };
    stickyColumn: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    variant: {
        type: StringConstructor;
        required: false;
    };
}>>, {
    stickyColumn: boolean;
}>;
export default _sfc_main;
