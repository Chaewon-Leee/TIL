{"ast":null,"code":"import 'v-calendar/dist/style.css';\nexport default {\n  name: 'App',\n  data: () => {\n    return {\n      focus: '',\n      type: 'month',\n      selectedOpen: false,\n      selectedElement: undefined,\n      selectedEvent: {},\n      events: [{\n        name: 'Event 1',\n        start: '2022-04-01',\n        timed: false\n      }, {\n        name: 'Event 2',\n        start: '2022-04-04',\n        end: '2022-04-06'\n      }, {\n        name: 'Event 3',\n        start: '2022-04-04T05:00:00',\n        end: '2022-04-04T07:00:00',\n        timed: true\n      }, {\n        name: 'Event 4',\n        start: '2022-04-08T08:00:00',\n        end: '2022-04-08T10:00:00',\n        timed: true\n      }]\n    };\n  },\n  methods: {\n    viewDay({\n      date\n    }) {\n      this.focus = date;\n      this.type = 'day';\n    },\n\n    showEvent({\n      nativeEvent,\n      event\n    }) {\n      const open = () => {\n        this.selectedEvent = event;\n        this.selectedElement = nativeEvent.target;\n        requestAnimationFrame(() => requestAnimationFrame(() => this.selectedOpen = true));\n      };\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false;\n        requestAnimationFrame(() => requestAnimationFrame(() => open()));\n      } else {\n        open();\n      }\n\n      nativeEvent.stopPropagation();\n    }\n\n  },\n  computed: {\n    selectedEventStart() {\n      return this.selectedEvent && this.selectedEvent.start && format(new Date(this.selectedEvent.start), 'h:mm a') || '12:00 AM';\n    },\n\n    selectedEventEnd() {\n      return this.selectedEvent && this.selectedEvent.end && format(new Date(this.selectedEvent.end), 'h:mm a') || '12:00 AM';\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyCA,OAAO,2BAAP;AAEA,eAAe;EACbA,IAAI,EAAE,KADO;EAEbC,IAAI,EAAE,MAAM;IACV,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,IAAI,EAAE,OAFD;MAGLC,YAAY,EAAE,KAHT;MAILC,eAAe,EAAEC,SAJZ;MAKLC,aAAa,EAAE,EALV;MAMLC,MAAM,EAAE,CACN;QACER,IAAI,EAAE,SADR;QAEES,KAAK,EAAE,YAFT;QAGEC,KAAK,EAAE;MAHT,CADM,EAMN;QACEV,IAAI,EAAE,SADR;QAEES,KAAK,EAAE,YAFT;QAGEE,GAAG,EAAE;MAHP,CANM,EAWN;QACEX,IAAI,EAAE,SADR;QAEES,KAAK,EAAE,qBAFT;QAGEE,GAAG,EAAE,qBAHP;QAIED,KAAK,EAAE;MAJT,CAXM,EAiBN;QACEV,IAAI,EAAE,SADR;QAEES,KAAK,EAAE,qBAFT;QAGEE,GAAG,EAAE,qBAHP;QAIED,KAAK,EAAE;MAJT,CAjBM;IANH,CAAP;EA+BD,CAlCY;EAmCbE,OAAO,EAAE;IACPC,OAAO,CAAC;MAAEC;IAAF,CAAD,EAAW;MAChB,KAAKZ,KAAL,GAAaY,IAAb;MACA,KAAKX,IAAL,GAAY,KAAZ;IACD,CAJM;;IAKPY,SAAS,CAAC;MAAEC,WAAF;MAAeC;IAAf,CAAD,EAAyB;MAChC,MAAMC,IAAG,GAAI,MAAM;QACjB,KAAKX,aAAL,GAAqBU,KAArB;QACA,KAAKZ,eAAL,GAAuBW,WAAW,CAACG,MAAnC;QACAC,qBAAqB,CAAC,MACpBA,qBAAqB,CAAC,MAAO,KAAKhB,YAAL,GAAoB,IAA5B,CADF,CAArB;MAGF,CANA;;MAQA,IAAI,KAAKA,YAAT,EAAuB;QACrB,KAAKA,YAAL,GAAoB,KAApB;QACAgB,qBAAqB,CAAC,MAAMA,qBAAqB,CAAC,MAAMF,IAAI,EAAX,CAA5B,CAArB;MACF,CAHA,MAGO;QACLA,IAAI;MACN;;MAEAF,WAAW,CAACK,eAAZ;IACF;;EAtBO,CAnCI;EA2DbC,QAAQ,EAAE;IACRC,kBAAkB,GAAG;MACnB,OACG,KAAKhB,aAAL,IACC,KAAKA,aAAL,CAAmBE,KADpB,IAECe,MAAM,CAAC,IAAIC,IAAJ,CAAS,KAAKlB,aAAL,CAAmBE,KAA5B,CAAD,EAAqC,QAArC,CAFR,IAGA,UAJF;IAMD,CARO;;IASRiB,gBAAgB,GAAG;MACjB,OACG,KAAKnB,aAAL,IACC,KAAKA,aAAL,CAAmBI,GADpB,IAECa,MAAM,CAAC,IAAIC,IAAJ,CAAS,KAAKlB,aAAL,CAAmBI,GAA5B,CAAD,EAAmC,QAAnC,CAFR,IAGA,UAJF;IAMF;;EAhBQ;AA3DG,CAAf","names":["name","data","focus","type","selectedOpen","selectedElement","undefined","selectedEvent","events","start","timed","end","methods","viewDay","date","showEvent","nativeEvent","event","open","target","requestAnimationFrame","stopPropagation","computed","selectedEventStart","format","Date","selectedEventEnd"],"sourceRoot":"","sources":["/Users/lee/Desktop/workspace/DDAOM/Project_DDAOM/ddaom_1/src/views/JoinMembershipView.vue"],"sourcesContent":["<template>\n  <v-app>\n    <div class=\"ma-4\" style=\"height: 100%\">\n      <!-- Event details menu -->\n      <v-menu\n        v-model=\"selectedOpen\"\n        :close-on-content-click=\"false\"\n        :activator=\"selectedElement\"\n        offset-x\n      >\n        <v-card min-width=\"200px\">\n          <v-toolbar color=\"purple accent-4\" dark>\n            <v-toolbar-title>\n              {{ selectedEvent.name }}\n            </v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <div class=\"text-center\">\n              {{ selectedEventStart }}\n              to\n              {{ selectedEventEnd }}\n            </div>\n            <v-checkbox readonly label=\"All day\" :value=\"!selectedEvent.timed\">\n            </v-checkbox>\n          </v-card-text>\n        </v-card>\n      </v-menu>\n      <v-calendar\n        :events=\"events\"\n        event-color=\"purple accent-4\"\n        @click:day=\"viewDay\"\n        @click:event=\"showEvent\"\n        v-model=\"focus\"\n        :type=\"type\"\n        now=\"2022-04-23\"\n      ></v-calendar>\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport 'v-calendar/dist/style.css'\n\nexport default {\n  name: 'App',\n  data: () => {\n    return {\n      focus: '',\n      type: 'month',\n      selectedOpen: false,\n      selectedElement: undefined,\n      selectedEvent: {},\n      events: [\n        {\n          name: 'Event 1',\n          start: '2022-04-01',\n          timed: false\n        },\n        {\n          name: 'Event 2',\n          start: '2022-04-04',\n          end: '2022-04-06'\n        },\n        {\n          name: 'Event 3',\n          start: '2022-04-04T05:00:00',\n          end: '2022-04-04T07:00:00',\n          timed: true\n        },\n        {\n          name: 'Event 4',\n          start: '2022-04-08T08:00:00',\n          end: '2022-04-08T10:00:00',\n          timed: true\n        }\n      ]\n    }\n  },\n  methods: {\n    viewDay({ date }) {\n      this.focus = date\n      this.type = 'day'\n    },\n    showEvent({ nativeEvent, event }) {\n      const open = () => {\n        this.selectedEvent = event\n        this.selectedElement = nativeEvent.target\n        requestAnimationFrame(() =>\n          requestAnimationFrame(() => (this.selectedOpen = true))\n        )\n      }\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false\n        requestAnimationFrame(() => requestAnimationFrame(() => open()))\n      } else {\n        open()\n      }\n\n      nativeEvent.stopPropagation()\n    }\n  },\n  computed: {\n    selectedEventStart() {\n      return (\n        (this.selectedEvent &&\n          this.selectedEvent.start &&\n          format(new Date(this.selectedEvent.start), 'h:mm a')) ||\n        '12:00 AM'\n      )\n    },\n    selectedEventEnd() {\n      return (\n        (this.selectedEvent &&\n          this.selectedEvent.end &&\n          format(new Date(this.selectedEvent.end), 'h:mm a')) ||\n        '12:00 AM'\n      )\n    }\n  }\n}\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}