{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cebd208\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"To Do List\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  id: \"text\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"list\"\n}, [/*#__PURE__*/_createElementVNode(\"ul\", {\n  id: \"todo\"\n})], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  id: \"selectbutton\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"html\", null, [_createElementVNode(\"body\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n    id: \"textarea\",\n    type: \"text\",\n    placeholder: \"할 일을 입력하세요.\",\n    onKeyup: _cache[0] || (_cache[0] = $event => _ctx.enterkey())\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"input\", {\n    id: \"addbutton\",\n    type: \"button\",\n    value: \"Enter\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.addList())\n  })]), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    class: \"controlbutton\",\n    type: \"button\",\n    value: \"전체 선택\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.selectAll())\n  }), _createElementVNode(\"input\", {\n    class: \"controlbutton\",\n    type: \"button\",\n    value: \"전체 해제\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.unSelectAll())\n  }), _createElementVNode(\"input\", {\n    class: \"controlbutton\",\n    type: \"button\",\n    value: \"선택 삭제\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.removeItem())\n  })])])])]);\n}","map":{"version":3,"mappings":";;;;gEAIQA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,EAAc;AAAA;AAAd;;;EACKC,EAAE,EAAC;;;gEAcRD,oBAEM,KAFN,EAEM;EAFDC,EAAE,EAAC;AAEF,CAFN,EAAc,cACZD,oBAAmB,IAAnB,EAAmB;EAAfC,EAAE,EAAC;AAAY,CAAnB,CADY,CAAd;;AAAA;;;EAGKA,EAAE,EAAC;;;uBArBdC,oBA2CM,KA3CN,EA2CM,IA3CN,EA2CM,CA1CJF,oBAyCO,MAzCP,EAyCO,IAzCP,EAyCO,CAxCLA,oBAuCO,MAvCP,EAuCO,IAvCP,EAuCO,CAtCLG,UAsCK,EArCLH,oBAaM,KAbN,cAaM,CAZJA,oBAKE,OALF,EAKE;IAJAC,EAAE,EAAC,UAIH;IAHAG,IAAI,EAAC,MAGL;IAFAC,WAAW,EAAC,aAEZ;IADCC,OAAK,sCAAEC,eAAF;EACN,CALF;;EAAA,CAYI,EANJP,oBAKE,OALF,EAKE;IAJAC,EAAE,EAAC,WAIH;IAHAG,IAAI,EAAC,QAGL;IAFAI,KAAK,EAAC,OAEN;IADCC,OAAK,sCAAEC,kBAAF;EACN,CALF,CAMI,CAbN,CAqCK,EAvBLC,UAuBK,EApBLX,oBAmBM,KAnBN,cAmBM,CAlBJA,oBAKE,OALF,EAKE;IAJAY,KAAK,EAAC,eAIN;IAHAR,IAAI,EAAC,QAGL;IAFAI,KAAK,EAAC,OAEN;IADCC,OAAK,sCAAEC,oBAAF;EACN,CALF,CAkBI,EAZJV,oBAKE,OALF,EAKE;IAJAY,KAAK,EAAC,eAIN;IAHAR,IAAI,EAAC,QAGL;IAFAI,KAAK,EAAC,OAEN;IADCC,OAAK,sCAAEC,sBAAF;EACN,CALF,CAYI,EANJV,oBAKE,OALF,EAKE;IAJAY,KAAK,EAAC,eAIN;IAHAR,IAAI,EAAC,QAGL;IAFAI,KAAK,EAAC,OAEN;IADCC,OAAK,sCAAEC,qBAAF;EACN,CALF,CAMI,CAnBN,CAoBK,CAvCP,CAwCK,CAzCP,CA0CI,CA3CN","names":["_createElementVNode","id","_createElementBlock","_hoisted_1","type","placeholder","onKeyup","_ctx","value","onClick","$options","_hoisted_3","class"],"sourceRoot":"","sources":["/Users/lee/Desktop/workspace/TIL/vue/practice/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    <html>\n      <body>\n        <h1>To Do List</h1>\n        <div id=\"text\">\n          <input\n            id=\"textarea\"\n            type=\"text\"\n            placeholder=\"할 일을 입력하세요.\"\n            @keyup=\"enterkey()\"\n          />\n          <input\n            id=\"addbutton\"\n            type=\"button\"\n            value=\"Enter\"\n            @click=\"addList()\"\n          />\n        </div>\n        <div id=\"list\">\n          <ul id=\"todo\"></ul>\n        </div>\n        <div id=\"selectbutton\">\n          <input\n            class=\"controlbutton\"\n            type=\"button\"\n            value=\"전체 선택\"\n            @click=\"selectAll()\"\n          />\n          <input\n            class=\"controlbutton\"\n            type=\"button\"\n            value=\"전체 해제\"\n            @click=\"unSelectAll()\"\n          />\n          <input\n            class=\"controlbutton\"\n            type=\"button\"\n            value=\"선택 삭제\"\n            @click=\"removeItem()\"\n          />\n        </div>\n      </body>\n    </html>\n  </div>\n</template>\n<script>\nexport default {\n  conponents: {},\n  data() {\n    return {\n      sampleData: ''\n    }\n  },\n  setup() {},\n  created() {},\n  mounted() {},\n  methods: {\n    divcheck() {\n      const che = document.querySelector('li input')\n      che.checked = true\n    },\n    addList() {\n      const textarea = document.getElementById('textarea').value\n      const li = document.createElement('li')\n\n      li.style.fontSize = '20px'\n      li.style.lineHeight = '50px'\n\n      const check = document.createElement('input')\n      check.setAttribute('type', 'checkbox')\n      check.setAttribute('class', 'ch')\n\n      const editbutton = document.createElement('button')\n      editbutton.innerText = '수정'\n      editbutton.style.width = '50px'\n      editbutton.style.height = '35px'\n      editbutton.style.fontSize = '16px'\n      editbutton.style.fontWeight = 'bold'\n      editbutton.style.marginTop = '8px'\n\n      editbutton.addEventListener('click', edittext)\n\n      const savebutton = document.createElement('button')\n      savebutton.innerText = '저장'\n      savebutton.style.float = 'right'\n      savebutton.style.width = '50px'\n      savebutton.style.height = '35px'\n      savebutton.style.fontSize = '16px'\n      savebutton.style.fontWeight = 'bold'\n      savebutton.style.marginLeft = '8px'\n      savebutton.style.marginTop = '8px'\n      // savebutton.addEventListener(\"click\",savetext);\n      editbutton.style.float = 'right'\n      li.style.height = '50px'\n\n      const textNode = document.createTextNode(textarea)\n\n      li.appendChild(check)\n      li.appendChild(textNode)\n      li.appendChild(savebutton)\n      li.appendChild(editbutton)\n      document.getElementById('todo').appendChild(li)\n      document.getElementById('textarea').value = ''\n      document.getElementById('textarea').focus()\n\n      function edittext() {\n        textNode.remove()\n        const edittextbox = document.createElement('input')\n        edittextbox.type = 'text'\n        edittextbox.setAttribute('id', 'edit')\n        this.parentElement.appendChild(edittextbox)\n      }\n    },\n    removeItem() {\n      // const ul = document.getElementById('todo')\n\n      const chb = document.querySelectorAll('input[type=checkbox]')\n      for (var i = 0; i < chb.length; i++) {\n        if (chb[i].checked === true) {\n          chb[i].parentElement.remove()\n        }\n      }\n    },\n    selectAll() {\n      const chb = document.querySelectorAll('.ch')\n      chb.forEach((checkbox) => {\n        checkbox.checked = true\n      })\n    },\n    unSelectAll() {\n      const chb = document.querySelectorAll('.ch')\n      chb.forEach((checkbox) => {\n        checkbox.checked = false\n      })\n    }\n  }\n}\n</script>\n<style scoped>\nbody {\n  background-color: rgb(221, 234, 244);\n}\n\nh1 {\n  font-size: 50px;\n  text-align: center;\n}\n\n#text,\n#list,\n#selectbutton {\n  width: 1000px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n}\n\n#textarea {\n  width: 850px;\n  height: 50px;\n  font-size: 15px;\n  border-color: rgb(197, 197, 197);\n  border-radius: 5px;\n}\n\n#addbutton {\n  width: 130px;\n  height: 55px;\n  font-size: 24px;\n  color: gray;\n  background-color: rgb(239, 250, 248);\n  border-radius: 0 5px 5px 0;\n}\n\n#list {\n  background-color: rgb(239, 250, 248);\n}\n\n#selectbutton {\n  text-align: right;\n}\n\n.controlbutton {\n  background-color: rgb(61, 61, 236);\n  color: white;\n  border: none;\n  font-size: 15px;\n  padding: 10px;\n  border-radius: 5px;\n}\nul {\n  list-style: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}